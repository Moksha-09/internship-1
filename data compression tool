#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// Function to compress a file using RLE
void compressFile(const char *inputFile, const char *outputFile) {
    FILE *in = fopen(inputFile, "r");
    FILE *out = fopen(outputFile, "w");

    if (in == NULL || out == NULL) {
        printf("Error opening files.\n");
        return;
    }

    char current, previous;
    int count = 1;

    previous = fgetc(in);

    while ((current = fgetc(in)) != EOF) {
        if (current == previous) {
            count++;
        } else {
            fprintf(out, "%c%d", previous, count);
            previous = current;
            count = 1;
        }
    }

    if (feof(in)) {
        fprintf(out, "%c%d", previous, count);
    }

    fclose(in);
    fclose(out);
    printf("Compression complete. Output saved to '%s'.\n", outputFile);
}

// Function to decompress a file compressed with RLE
void decompressFile(const char *inputFile, const char *outputFile) {
    FILE *in = fopen(inputFile, "r");
    FILE *out = fopen(outputFile, "w");

    if (in == NULL || out == NULL) {
        printf("Error opening files.\n");
        return;
    }

    char ch;
    int count;

    while ((ch = fgetc(in)) != EOF) {
        if (isalpha(ch) || ispunct(ch) || ch == ' ') {
            fscanf(in, "%d", &count);
            for (int i = 0; i < count; i++) {
                fputc(ch, out);
            }
        }
    }

    fclose(in);
    fclose(out);
    printf("Decompression complete. Output saved to '%s'.\n", outputFile);
}

int main() {
    int choice;
    char inputFile[100], outputFile[100];

    while (1) {
        printf("\n--- Run Length Encoding (RLE) Tool ---\n");
        printf("1. Compress File\n");
        printf("2. Decompress File\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter input filename to compress: ");
                scanf("%s", inputFile);
                printf("Enter output filename to save compressed data: ");
                scanf("%s", outputFile);
                compressFile(inputFile, outputFile);
                break;

            case 2:
                printf("Enter input filename to decompress: ");
                scanf("%s", inputFile);
                printf("Enter output filename to save decompressed data: ");
                scanf("%s", outputFile);
                decompressFile(inputFile, outputFile);
                break;

            case 3:
                printf("Exiting tool.\n");
                return 0;

            default:
                printf("Invalid choice. Try again.\n");
        }
    }

    return 0;
}
